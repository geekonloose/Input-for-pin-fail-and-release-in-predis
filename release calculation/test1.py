import scipy, pylab, randomimport numpy as npfrom matplotlib import pyplot as pltimport mathrupture_dia = 2E-3  # in mpin_dia = 5.5E-3area_of_rupture = 3.14 * (rupture_dia ** 2 / 4)  # Area of ruptureheight_plenum = 320E-3g = 9.8cde = 0.32gmma = 5.0 / 3# c_gamma = (gamma * (2 / (gamma + 1)) ** ((gamma + 1) / (gamma - 1))) ** 0.5R_nu_gas = 08.314mu = 23.2plenum_volume = 3.14 * (pin_dia ** 2 / 4) * height_plenumlength_of_clad = 0.45E-3Tg = 400sweep_to_volume = (200E-6 / (4))rbf = 1E-3lmbda = 3.75E-4no_of_iteration = int(1E7)dt = 3E-1P = 1E19*3.75P_ref = 0pin_dia = 5.5E-3height_plenum = 320E-3# print plenum_volumepin_fail_time = 6E6constant = (rupture_dia ** 2  * area_of_rupture ) / (64 * length_of_clad * mu)# print 'constant',constantNa= np.zeros([no_of_iteration])Nb= np.zeros([no_of_iteration])nu1 = np.zeros([no_of_iteration])pressure = np.zeros([no_of_iteration])for i in range(no_of_iteration-1):    nu = ((1 / plenum_volume)* ((constant) * (((Na[i] / plenum_volume )* 1.022E-22 * Tg) - P_ref)))    # print('pressure',((Na[i] / plenum_volume ) * 1.022E-22 * Tg ))    if i< pin_fail_time:        # print 'sw=0'        sw=0        pressure[i] = ((Na[i] / plenum_volume ) * 1.022E-22 * Tg )    elif i >= pin_fail_time:        # print('pressure v2', ((Na[i] / plenum_volume) * 1.022E-22 * Tg))        pressure[i] = ((Na[i] / plenum_volume ) * 1.022E-22 * Tg )        sw=nu        nu1[i] = nu    # else:        # print 'sw = else '        # sw = 0    Na[i + 1] = Na[i] + rbf * P * dt - lmbda * Na[i] * dt - sw*dt*Na[i]    Nb[i+1] = Nb[i] + sw*Na[i]-lmbda*Nb[i]*dt-sweep_to_volume*Nb[i]time_t = np.array([i4 for i4 in range(no_of_iteration)])# print "L",input_data.Lplt.plot(dt*time_t,Na)plt.show()# plt.plot(dt*time_t,Nb)# plt.show()# plt.plot(dt*time_t,nu1)# plt.show()plt.plot(dt*time_t,pressure)plt.show()